{"version":3,"sources":["content/Module.tsx","content/Submodule.tsx","Fade.tsx","NavbarLink.tsx","Navbar.tsx","App.tsx","serviceWorker.ts","content/Page.tsx","content/1-Welcome/1-1-Welcome/pages/1-1-1-SoYouGotThatCS1Professor.tsx","content/1-Welcome/1-1-Welcome/pages/1-1-2-About.tsx","content/1-Welcome/1-1-Welcome/1-1-Welcome.tsx","content/1-Welcome/1-2-Contributing/pages/1-2-1-Contributing.tsx","content/1-Welcome/1-2-Contributing/1-2-Contributing.tsx","content/1-Welcome/1-Welcome.tsx","CodeBlock.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-1-The-Osprey.tsx","Replit.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-2-Hello-World.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-3-Two-Plus-Two.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-4-Variables.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-5-Functions.tsx","content/2-ComputerScience1/2-1-BasicsOfC/pages/2-1-6-printf.tsx","content/2-ComputerScience1/2-1-BasicsOfC/2-1-BasicsOfC.tsx","content/2-ComputerScience1/2-2-What-Do-I-Do/pages/2-2-1-I-Dont-Know-Where-To-Start.tsx","content/2-ComputerScience1/2-2-What-Do-I-Do/pages/2-2-2-Asking-Good-Questions.tsx","content/2-ComputerScience1/2-2-What-Do-I-Do/pages/2-2-3-Reading-the-Error-Message.tsx","content/2-ComputerScience1/2-2-What-Do-I-Do/2-2-What-Do-I-Do.tsx","content/ModuleList.tsx","content/2-ComputerScience1/2-ComputerScience1.tsx","index.tsx"],"names":["Module","id","title","submodules","header","this","key","className","href","map","e","jsx","Submodule","pages","Fade","props","state","active","render","prevProps","setState","setTimeout","children","React","Component","NavbarLink","handleScroll","section","document","getElementById","reference","sectionTop","offsetTop","sectionBot","offsetHeight","windowTop","window","pageYOffset","windowBot","innerHeight","setActive","addEventListener","removeEventListener","style","fontSize","ref","push","defaultProps","Navbar","modules","App","Boolean","location","hostname","match","Page","content","p1_1_1","p1_1_2","p1_2_1","s1_1","s2_2","patterns","nest","lex","str","ret","buf","join","best","res","buf2","cname","mat","index","length","slice","CodeBlock","text","inline","Array","isArray","input","language","Replit","height","width","src","scrolling","frameBorder","allowTransparency","allowFullScreen","sandbox","p2_1_1","p2_1_2","p2_1_3","p2_1_4","p2_1_5","p2_1_6","p2_2_1","p2_2_2","p2_2_3","list","m1","s2_1","ReactDOM","ModuleList","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02bb30c8.chunk.js","sourcesContent":["import Submodule from \"./Submodule\";\nimport React from \"react\";\n\nexport default class Module {\n    public readonly id: string;\n    public readonly title: string;\n    public readonly submodules: Submodule[];\n    public readonly header: JSX.Element | undefined;\n\n    constructor(id: string, title: string, submodules: Submodule[], header?: JSX.Element) {\n        this.title = title;\n        this.submodules = submodules;\n        this.id = id;\n        this.header = header;\n    }\n\n    public jsx(): JSX.Element {\n        return (\n            <div id={this.id} key={this.id} className=\"module d-flex flex-column align-items-center shadow-sm bg-light-1 my-4 px-2 w-100\">\n                <a href={`#${this.id}`} className=\"title-module my-3\">{this.title}</a>\n                {this.header && <hr className=\"w-100\"/>}\n                {this.header && this.header}\n                {this.submodules.map(e => e.jsx())}\n            </div>\n        )\n    }\n}","import Page from \"./Page\";\nimport React from \"react\";\n\nexport default class Submodule {\n    public readonly id: string;\n    public readonly title: string;\n    public readonly pages: Page[];\n    public readonly header: JSX.Element | undefined;\n\n    constructor(id: string, title: string, pages: Page[], header?: JSX.Element) {\n        this.title = title;\n        this.pages = pages;\n        this.id = id;\n        this.header = header;\n    }\n\n    public jsx(): JSX.Element {\n        return (\n            <div id={this.id} key={this.id} className=\"submodule d-flex flex-column align-items-center bg-light-2 my-2 px-2 w-100\">\n                <a href={`#${this.id}`} className=\"title-submodule my-2\">{this.title}</a>\n                {this.header && <hr className=\"w-100\"/>}\n                {this.header && this.header}\n                {this.pages.map(e => e.jsx())}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\n\nexport interface FadeProps {\n    render: boolean;\n}\n\n\nexport interface FadeState {\n    active: boolean;\n    render: boolean;\n}\n\nexport class Fade extends React.Component<FadeProps, FadeState> {\n    public constructor(props: FadeProps) {\n        super(props);\n        this.state = {active: props.render, render: props.render};\n    }\n\n    public componentDidUpdate(prevProps: FadeProps): void {\n        if (this.props.render && !prevProps.render) {\n            this.setState({active: true, render: true})\n        } else if (!this.props.render && prevProps.render) {\n            this.setState({active: false, render: true});\n            setTimeout(() => {\n                !this.props.render && this.setState({active: false, render: false})\n            }, 400);\n        }\n    }\n\n    public render() {\n        return this.state.render ?\n            <div className={this.state.active ? \"fadein\" : \"fadeout\"}>\n                {this.props.children}\n            </div>\n            :\n            <div/>\n    }\n}","import React from 'react';\nimport './App.css';\nimport Module from \"./content/Module\";\nimport Page from \"./content/Page\";\nimport Submodule from \"./content/Submodule\";\nimport {Fade} from \"./Fade\";\n\nexport interface NavbarLinkProps {\n    reference: Module | Submodule | Page;\n    active: boolean;\n}\n\nexport interface NavbarLinkState {\n    active: boolean;\n}\n\nexport default class NavbarLink extends React.Component<NavbarLinkProps, NavbarLinkState> {\n    private children: Array<NavbarLink | null>;\n\n    public static defaultProps: Partial<NavbarLinkProps> = {\n        active: false\n    };\n\n    public constructor(props: NavbarLinkProps) {\n        super(props);\n        this.state = {active: this.props.active};\n        this.children = [];\n    }\n\n    public active(): boolean {\n        return this.state.active;\n    }\n\n    public setActive(active: boolean): void {\n        this.setState({active});\n    }\n\n    public handleScroll = () => {\n        const section = document.getElementById(this.props.reference.id);\n        if (section === null) {\n            return;\n        }\n        const sectionTop = section.offsetTop;\n        const sectionBot = sectionTop + section.offsetHeight;\n        const windowTop = window.pageYOffset;\n        const windowBot = windowTop + window.innerHeight;\n        this.setActive(windowTop <= sectionBot && windowBot >= sectionTop)\n    };\n\n    public componentDidMount(): void {\n        window.addEventListener(\"scroll\", this.handleScroll);\n        this.handleScroll();\n    }\n\n    public componentWillUnmount(): void {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n        setTimeout(() => {\n        }, 700);\n    }\n\n    public render() {\n        this.children = [];\n        if (this.props.reference instanceof Module) {\n            return (\n                <div className={\"nav-module fadein\"}>\n                    <a href={`#${this.props.reference.id}`}\n                       className={`nav-link ${this.state.active ? \"nav-link-active\" : \"\"}`}\n                       style={{fontSize: \"100%\"}}>{this.props.reference.title}</a>\n                    {this.props.reference.submodules.map(e => {\n                        return <NavbarLink key={e.id} ref={e => this.children.push(e)} reference={e}/>\n                    })}\n                </div>\n            );\n        }\n        if (this.props.reference instanceof Submodule) {\n            return (\n                <div className={\"nav-submodule fadein\"}>\n                    <a href={`#${this.props.reference.id}`}\n                       className={`nav-link ${this.state.active ? \"nav-link-active\" : \"\"}`}\n                       style={{fontSize: \"90%\"}}>{this.props.reference.title}</a>\n                    <Fade render={this.state.active}>\n                        {this.props.reference.pages.map(e => {\n                            return <NavbarLink key={e.id} reference={e}/>\n                        })}\n                    </Fade>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"nav-page fadein\">\n                    <a href={`#${this.props.reference.id}`}\n                       className={`nav-link ${this.state.active ? \"nav-link-active\" : \"\"}`}\n                       style={{fontSize: \"80%\"}}>{this.props.reference.title}</a>\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport Module from \"./content/Module\";\nimport NavbarLink from \"./NavbarLink\";\n\nexport interface NavbarProps {\n    modules: Module[];\n}\n\nexport default class Navbar extends React.Component<NavbarProps> {\n    public constructor(props: NavbarProps) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <div className=\"sidebar\">\n                {this.props.modules.map(e => {return (\n                    <NavbarLink key={e.id} reference={e} />\n                )})}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Module from \"./content/Module\";\nimport Navbar from \"./Navbar\";\n\nexport interface AppProps {\n    modules: Module[];\n}\n\nexport default class App extends React.Component<AppProps> {\n    public constructor(props: AppProps) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <div className=\"w-100 d-flex flex-row\">\n                <div className=\"d-flex flex-column main_content\">\n                    {this.props.modules.map(e => e.jsx())}\n                </div>\n                <Navbar modules={this.props.modules} />\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nexport default class Page {\n    public readonly id: string;\n    public readonly title: string;\n    public readonly content: JSX.Element;\n\n    public constructor(id: string, title: string, content: JSX.Element) {\n        this.title = title;\n        this.content = content;\n        this.id = id;\n    }\n\n    public jsx(): JSX.Element {\n        return (\n            <div id={this.id} key={this.id} className=\"page\">\n                <a href={`#${this.id}`} className=\"title-page mt-3 align-self-center\">{this.title}</a>\n                <hr className=\"w-100\"/>\n                <div className=\"page-content\">\n                    {this.content}\n                </div>\n            </div>\n        )\n    }\n}","import Page from \"../../../Page\";\nimport React from \"react\";\n\nexport default new Page(\"welcome-welcome-soyougotthatcs1professor\", \"So, you got...that...CS1 professor.\",\n    <div>\n        <p>\n            All you wanted to do is slap some code on a page and make sparks fly,\n            but you got <i>that</i> professor who kind of assumes you already know how to code and now you're screwed.\n            That's why this webpage exists. Below are a series of short and to-the-point articles that quickly\n            explain the concepts you need to get enough partial credit on your projects to pass the class.\n        </p>\n    </div>\n);\n\n","import Page from \"../../../Page\";\nimport React from \"react\";\n\nexport default new Page(\"welcome-welcome-about\", \"About\",\n    <div>\n        <p>\n            The primary motivation for this project is to help build a semi-decent foundation for new programmers that\n            happened to get shafted by an <strong>ONLINE ONLY</strong> Computer Science 1 class.\n            It is not meant to be a replacement for actual instruction, but thanks to\n            our...um...<i>creative</i> administration, it may have to be.\n        </p>\n    </div>\n);","import p1_1_1 from \"./pages/1-1-1-SoYouGotThatCS1Professor\"\nimport p1_1_2 from \"./pages/1-1-2-About\"\nimport Submodule from \"../../Submodule\";\n\nexport default new Submodule(\"welcome-welcome\", \"Welcome\", [p1_1_1, p1_1_2]);\n","import Page from \"../../../Page\"\nimport React from 'react'\n\nexport default new Page(\"1-2-1\", \"Contributing\",\n    <div>\n        <p>The project's source is available on <a href=\"https://github.com/jonathan-lemos/cs1help\">Github</a> if you\n            want to contribute.</p>\n        <br/>\n        <b>If you want to:</b>\n        <ul>\n            <li>\n                Add a page:<br/>\n                Go to <code>src/content/</code> to see examples of how pages are laid out. Then send a pull request to\n                add your own.\n            </li>\n            <li>\n                Make style changes:<br/>\n                The rest of the project is laid out under <code>src/</code>, so make changes there and submit a pull\n                request.\n            </li>\n        </ul>\n    </div>\n);\n","import p1_2_1 from \"./pages/1-2-1-Contributing\"\nimport Submodule from \"../../Submodule\";\n\nexport default new Submodule(\"computerscience1-contributing\", \"Contributing\", [p1_2_1]);\n","import s1_1 from \"./1-1-Welcome/1-1-Welcome\";\nimport s2_2 from \"./1-2-Contributing/1-2-Contributing\";\nimport Module from \"../Module\";\n\nexport default new Module(\"welcome\", \"Welcome\", [s1_1, s2_2]);","import React from \"react\";\n\nexport interface CodeBlockProps {\n    language: \"c\" | \"gcc\" | \"text\";\n    text: string | string[]\n}\n\nconst patterns: { [key: string]: Array<{ key: RegExp, style: string, nest?: Array<{ key: RegExp, style: string }> }> } = {\n    \"c\": [\n        {\n            key: /\\b_Complex\\b|\\bauto\\b|\\bbreak\\b|\\bcase\\b|\\bchar\\b|\\bconst\\b|\\bcontinue\\b|\\bdefault\\b|\\bdo\\b|\\bdouble\\b|\\belse\\b|\\benum\\b|\\bextern\\b|\\bfloat\\b|\\bfor\\b|\\bgoto\\b|\\bif\\b|\\binline\\b|\\bint\\b|\\blong\\b|\\bregister\\b|\\brestrict\\b|\\breturn\\b|\\bshort\\b|\\bsigned\\b|\\bsizeof\\b|\\bstatic\\b|\\bstruct\\b|\\bswitch\\b|\\btypedef\\b|\\bunion\\b|\\bunsigned\\b|\\bvoid\\b|\\bvolatile\\b|\\bwhile\\b/,\n            style: \"code-keyword\"\n        },\n        {\n            key: /\\b[+-]?\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b/,\n            style: \"code-number\"\n        },\n        {\n            key: /\"(\\\\\"|[^\"])*?\"/,\n            style: \"code-string\",\n            nest: [\n                {\n                    key: /\\\\./,\n                    style: \"code-string-escape\"\n                },\n                {\n                    key: /%.*?[xXfdusc%]/,\n                    style: \"code-string-percent\"\n                }\n            ]\n        },\n        {\n            key: /'..?'/,\n            style: \"code-string\",\n            nest: [\n                {\n                    key: /\\\\./,\n                    style: \"code-string-escape\"\n                }\n            ]\n        },\n        {\n            key: /\\/\\/.*$|\\/\\*.*?\\*\\//m,\n            style: \"code-comment\"\n        },\n        {\n            key: /#.*$/,\n            style: \"code-preprocessor\",\n            nest: [\n                {\n                    key: /(?<=<).*?(?=>)/,\n                    style: \"code-string\"\n                }\n            ]\n        }\n    ],\n    \"gcc\": [\n        {\n            key: /\\b'(\\\\'|[^'])*?\"\\b/,\n            style: \"code-string\"\n        },\n        {\n            key: /error:/,\n            style: \"code-error\"\n        },\n        {\n            key: /warning:/,\n            style: \"code-warning\"\n        },\n        {\n            key: /\\d+:\\d+/,\n            style: \"code-keyword\"\n        }\n    ],\n    \"text\": []\n};\n\nconst lex = (str: string[], patterns: Array<{ key: RegExp, style: string, nest?: Array<{ key: RegExp, style: string }> }>): JSX.Element[] => {\n    const ret: JSX.Element[] = [];\n    let buf = str.join(\"\\n\");\n    while (buf !== \"\") {\n        let best: [string, number] = [\"\", 99999];\n        let res = buf.match(/^\\s+/);\n        if (res != null) {\n            ret.push(<span className=\"pre\">{res[0]}</span>);\n            buf = buf.slice(res[0].length);\n            continue;\n        }\n        let buf2: JSX.Element[] = [];\n        let cname = \"\";\n        for (const mat of patterns) {\n            res = buf.match(mat.key);\n            if (res != null && res.index != null && (res.index < best[1] || (res.index === best[1] && best[0].length < res[0].length))) {\n                cname = mat.style;\n                if (!mat.nest) {\n                    best = [res[0], res.index];\n                    buf2 = [];\n                } else {\n                    best = [res[0], res.index];\n                    buf2 = lex([res[0]], mat.nest);\n                    break;\n                }\n            }\n        }\n        if (best[1] > 0) {\n            ret.push(<span className=\"pre\">{buf.slice(0, best[1])}</span>);\n        }\n        if (buf2.length > 0) {\n            ret.push(<span className={cname}>{buf2}</span>);\n        }\n        else {\n            ret.push(<span className={cname}>{best[0]}</span>);\n        }\n        buf = buf.slice(best[1] + best[0].length);\n    }\n    return ret;\n};\n\nexport default class CodeBlock extends React.Component<CodeBlockProps> {\n    public static defaultProps: Partial<CodeBlockProps> = {\n        language: \"text\"\n    };\n\n    private readonly text: JSX.Element[];\n    private readonly inline: boolean;\n\n    public constructor(props: CodeBlockProps) {\n        super(props);\n        this.inline = !Array.isArray(props.text);\n        const input = !Array.isArray(props.text) ? [props.text] : props.text;\n        this.text = lex(input, patterns[props.language]);\n    }\n\n    public render() {\n        return this.inline ? (\n            <span className=\"code-block-inline\">{this.text}</span>\n        ) : (\n            <div className=\"code-block\">{this.text}</div>\n        )\n    }\n}\n","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-theosprey\", \"The Osprey\", <div>\n    <p>\n        All you wanted to know is how to make the next Fortnite,\n        but now your professor is putting this \"Linux\" roadblock in your way.\n        Here's the bare minimum you need to know how to use it:\n    </p>\n    <p>\n        To log into the Osprey, open a command prompt or terminal by doing\n        <table className=\"table\">\n            <tbody>\n            <tr>\n                <th>OS</th>\n                <th>Do This</th>\n            </tr>\n            <tr>\n                <td>Windows</td>\n                <td>Click the start menu. Type in <CodeBlock text=\"cmd\"/>.</td>\n            </tr>\n            <tr>\n                <td>OSX</td>\n                <td>Press <CodeBlock text=\"Cmd + Space\"/> and then type in \"Terminal\".</td>\n            </tr>\n            <tr>\n                <td>Linux</td>\n                <td>If you're using Linux, you already know how to open a terminal.</td>\n            </tr>\n            </tbody>\n        </table>\n        and then type in\n    </p>\n    <CodeBlock language=\"text\" text=\"ssh [n-number]@osprey.unf.edu\"/>\n    <p className=\"pt-2\">\n        Enter your UNF password when prompted. Once you log in, use the following commands:\n    </p>\n    <table className=\"table table-striped\">\n        <tr>\n            <th>I want to</th>\n            <th>Command</th>\n            <th>Notes</th>\n        </tr>\n        <tr>\n            <td>See what's in the current directory</td>\n            <td><CodeBlock text=\"ls\"/></td>\n        </tr>\n        <tr>\n            <td>See what directory I'm in</td>\n            <td><CodeBlock text=\"pwd\"/></td>\n        </tr>\n        <tr>\n            <td>Make a new directory</td>\n            <td><CodeBlock text=\"mkdir [directory name]\"/></td>\n        </tr>\n        <tr>\n            <td>Enter a directory</td>\n            <td><CodeBlock text=\"cd [directory name]\"/></td>\n        </tr>\n        <tr>\n            <td>Go up a directory</td>\n            <td><CodeBlock text=\"cd ..\"/></td>\n        </tr>\n        <tr>\n            <td>Edit/create a file</td>\n            <td><CodeBlock text=\"pico [file]\"/></td>\n        </tr>\n        <tr>\n            <td>Remove a file/directory</td>\n            <td><CodeBlock text=\"rm -r [file or directory]\"/></td>\n        </tr>\n        <tr>\n            <td>Compile a C project</td>\n            <td><CodeBlock text=\"gcc [file.c] -o [output]\"/></td>\n        </tr>\n        <tr>\n            <td>Run an executable</td>\n            <td><CodeBlock text=\"./executable\"/></td>\n        </tr>\n        <tr>\n            <td>Turn in my project</td>\n            <td><CodeBlock text=\"turnin [file] [turnin_code]\"/></td>\n        </tr>\n    </table>\n    <p className=\"pt-2\">\n        While Linux is undeniably important to know for a computer science major, you really don't need to know it\n        if you're an electrical engineering or mechanical engineering major and this is a graduation requirement.\n        However, if you are a computer science major, you really should be comfortable with a Linux command line\n        by the time you graduate.\n    </p>\n</div>);\n","import React from \"react\";\n\nexport interface ReplitProps {\n    href: string;\n    title: string;\n}\n\nexport const Replit: React.FC<ReplitProps> = props => <iframe title={props.title} height=\"400px\" width=\"100%\"\n                                                              src={props.href}\n                                                              scrolling=\"no\" frameBorder=\"no\" allowTransparency={true}\n                                                              allowFullScreen={true}\n                                                              sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"/>;\n\nexport default Replit;","import Page from \"../../../Page\";\nimport React from \"react\";\nimport Replit from \"../../../../Replit\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-helloworld\", \"Hello World\", <div>\n    <p>\n        Now you're ready to make your first C program, and it looks like this:\n    </p>\n    <Replit href=\"https://repl.it/repls/BlandCommonTrapezoid?lite=true\" title=\"Hello World Example\"/>\n    <p>\n        and you're wondering, \"what the hell is this supposed to mean?\" And your professor probably told you: \"don't\n        worry about that, just copy this code\", and now you're in the habit of memorizing a bunch of bullshit that\n        really doesn't matter when you should be trying to understand <i>why</i> this code is the way it is,\n        so I'm going to give a brief explanation of it here:\n    </p>\n    <table className=\"table\">\n        <tr>\n            <th>Part</th>\n            <th>tl;dr</th>\n            <th>Full explanation</th>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"#include &lt;stdio.h&gt;\"/></td>\n            <td>This makes the functions in <CodeBlock language=\"c\" text=\"stdio.h\"/> available for use.</td>\n            <td>All lines of code beginning with <CodeBlock language=\"c\" text=\"#\"/> are \"preprocessor directives\". This\n                one essentially\n                pastes the contents of the given filename\n                (<CodeBlock language=\"c\" text=\"stdio.h\"/>) into your current file. On a Linux system, this would be\n                located at\n                <CodeBlock language=\"c\" text=\"/usr/include/stdio.h\"/>. In this case we only need the <CodeBlock\n                    language=\"c\" text=\"printf\"/> function.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"int\"/></td>\n            <td>The type that this function returns. In this case, an integer.</td>\n            <td>A function takes zero or more inputs, does things with those inputs, and <i>returns</i> an output.\n                For example, <CodeBlock language=\"c\" text=\"sin(x)\"/> takes a single decimal as an input, does some black\n                magic with it,\n                and <i>returns</i> the sine of the given value. Meanwhile <CodeBlock language=\"c\"\n                                                                                     text=\"strcmp(x, y)\"/> (string\n                compare)\n                takes two text strings and returns an integer comparing them. Just like in math,\n                a function can only return a single value.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"main\"/></td>\n            <td>The name of the function. In C, your code always starts executing at a function named <CodeBlock\n                language=\"c\" text=\"main\"/>.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"(void)\"/></td>\n            <td>This function takes no parameters.</td>\n            <td>Functions take input. The inputs a function takes are described by what's between the parentheses behind\n                the function's name. <CodeBlock language=\"c\" text=\"void\"/> is a special keyword meaning \"no parameters\",\n                but normally you\n                would\n                list the parameters that the function takes.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text='\"{...}\"'/></td>\n            <td>Denotes the body of a function.</td>\n            <td>Curly braces make up a \"compound statement\", which is just a group of statements.</td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"printf\"/></td>\n            <td>Prints something to the screen.</td>\n            <td>This is a function that takes an input string of characters, and <i>prints</i> it to the console.\n                It returns the number of characters you printed (not that you care).\n                <a href={\"#computerscience1-basicsofc-printf\"}>It's a little more complicated than that</a>, but that's\n                the gist.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text='(\"Hello world\\n\")'/>\n        </td>\n        <td>Calls the <CodeBlock language=\"c\" text=\"printf\"/> function with a single input of a string of characters\n            saying \"Hello\n            world\" followed by a newline.\n        </td>\n        <td><CodeBlock language=\"c\" text=\"\\n\"/> means \"newline\", which is equivalent to pressing the enter key on your\n            keyboard.\n            Strings of characters are denoted with quotes. The parentheses \"call\" the function with the inputs you\n            put inside.\n        </td>\n    </tr>\n    <tr>\n        <td><CodeBlock language=\"c\" text=\";\"/></td>\n        <td>Statements in C need to have a semicolon ending them.</td>\n        <td>Most pieces of code in C count as statements.</td>\n    </tr>\n    <tr>\n        <td><CodeBlock language=\"c\" text=\"return 0;\"/></td>\n        <td>Ends the function and returns the value <CodeBlock language=\"c\" text=\"0\"/> to the caller.</td>\n        <td><CodeBlock language=\"c\" text=\"return\"/> ends your function and outputs the value you provide to it to the\n            function that\n            called it. In the case of your <CodeBlock language=\"c\" text=\"main\"/> function, the program that executed\n            your program\n            receives this value.\n        </td>\n    </tr>\n</table>\n</div>);","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-2+2\", \"2 + 2\", <div>\n        <p>\n            Computers can do math. Math works pretty intuitively. For example you can add two integers (whole numbers) like\n            this: <CodeBlock language=\"c\" text=\"2 + 2\"/>, which evaluates to <CodeBlock language=\"c\" text=\"4\"/>.\n            You can also add two decimal numbers like <CodeBlock language=\"c\" text=\"0.1 + 0.2\"/>, which evaluates\n            to <CodeBlock language=\"c\" text=\"0.3\"/>\n            , or a decimal and an integer like: <CodeBlock language=\"c\" text=\"0.1 + 1\"/>\n            , which evaluates to <CodeBlock language=\"c\" text=\"1.1\"/>. However, note that adding a decimal to any other\n            number always gives you a decimal in return, even if the decimal is equivalent to an integer, such\n            as <CodeBlock language=\"c\" text=\"2.0 + 2\"/>, which evaluates to <CodeBlock language=\"c\" text=\"4.0\"/>, which\n            is not the same number as <CodeBlock language=\"c\" text=\"4\"/>, because the computer treats decimals and integers\n            differently.\n        </p>\n        <p>\n            Besides adding with <CodeBlock language=\"c\" text=\"+\"/>, you can also subtract\n            with <CodeBlock language=\"c\" text=\"-\"/>, multiply with <CodeBlock language=\"c\" text=\"*\"/>,\n            and divide with <CodeBlock language=\"c\" text=\"/\"/>. Usual PEMDAS order of operations applies,\n            so <CodeBlock language=\"c\" text=\"a + b * (c / d - e)\"/> would do <CodeBlock language=\"c\" text=\"c / d\"/> first,\n            then subtract <CodeBlock language=\"c\" text=\"e\"/>, then multiply by <CodeBlock language=\"c\" text=\"b\"/>, and\n            finally add <CodeBlock language=\"c\" text=\"a\"/> just like it would be evaluated in algebra.\n        </p>\n    </div>\n);","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-variables\", \"Variables\", <div>\n    <p>\n        You did some math, and you want to store the result so you don't have to do it again.\n        This is where variables come in.\n    </p>\n    <p>\n        You can save an integer value like this: <CodeBlock language=\"c\" text=\"int x = 2 + 2;\"/>, and you can save a\n        decimal value like this: <CodeBlock language=\"c\" text=\"double x = 0.1 + 0.2;\"/>. After you save a value like\n        this, you can reuse it like any other number: <CodeBlock language=\"c\" text=\"int y = x * 4;\"/>. Statements like\n        these are called \"variable declarations\", because they declare a variable for later use.\n    </p>\n    <p>\n        Saving an integer\n        value to a <CodeBlock language=\"c\" text=\"double\"/> does pretty much what you expect,\n        so <CodeBlock language=\"c\" text=\"double x = 2;\"/> saves the value <CodeBlock language=\"c\" text=\"2.0\"/>\n        to <CodeBlock language=\"c\" text=\"x\"/>.\n        However, saving a decimal to a <CodeBlock language=\"c\" text=\"int\"/> drops the decimal part\n        leaving only the integer part, meaning <CodeBlock language=\"c\" text=\"int x = 2.4;\"/> would save the\n        value <CodeBlock language=\"c\" text=\"2\"/> to <CodeBlock language=\"c\" text=\"x\"/>.\n    </p>\n    <p>\n        Once you have declared a variable, any code written <i>after your declaration</i>, and <strong>within the\n        current set of curly braces</strong> (<CodeBlock text=\"{...}\"/>) can use it. Once a variable has been declared,\n        a variable of the same name cannot be redeclared, so\n        <CodeBlock language=\"c\" text={[\n            \"int x = 4;\",\n            \"int x = 2;\"\n        ]}/>\n        is invalid. However, you can reassign a variable like below:\n        <CodeBlock language=\"c\" text={[\n            \"int x = 4;\",\n            \"x = 2;\"\n        ]}/>\n    </p>\n    <p>\n        You can also declare a variable without giving it a value like <CodeBlock language=\"c\" text=\"int x;\"/>.\n        In this case, <CodeBlock text=\"x\"/> is given a random value, so it's always good practice to assign your\n        variables like <CodeBlock language=\"c\" text=\"int x = 0;\"/> before use.\n    </p>\n    <p>\n        Below is a list of all basic types you can declare a variable as in C:\n    </p>\n    <table className=\"table\">\n        <tbody>\n        <tr>\n            <th>Type</th>\n            <th>tl;dr</th>\n            <th>Full explanation</th>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"int\"/></td>\n            <td>An integer (such as <CodeBlock language=\"c\" text=\"123456\"/>), which is a <i>whole</i> number (no\n                decimals).\n            </td>\n            <td>On 99% of systems this integer can range from -2^31 to 2^31 - 1 and is 32 bits in length. Note that this\n                is not true on every system.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"double\"/></td>\n            <td>A decimal (such as <CodeBlock language=\"c\" text=\"3.14\"/>), but several times more precise than\n                a <CodeBlock language=\"c\" text=\"float\"/>.\n            </td>\n            <td>Like floats, doubles cannot represent numbers exactly, but with (on 99% of systems) 64 bits instead of\n                32 bits, they are more precise by a factor of 2^32. They are called \"doubles\" because they have double\n                the amount of bits as a <CodeBlock language=\"c\" text=\"float\"/>.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"char\"/></td>\n            <td>A character (such as <CodeBlock language=\"c\" text=\"'A'\"/>).</td>\n            <td>Even though this is meant to represent a \"character\", deep down it really is just an\n                integer from -2^7 to 2^7 - 1 (on 99% of systems). For example, the\n                character <CodeBlock language=\"c\" text=\"'A'\"/> is really just the\n                integer <CodeBlock language=\"c\" text=\"65\"/>.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"char*\"/></td>\n            <td>A string of characters (such as <CodeBlock language=\"c\" text='\"Hello world\"'/>).</td>\n            <td>This is technically not a basic type like the others in the table, but is a \"pointer\" to\n                a <CodeBlock language=\"c\" text=\"char\"/>.\n                Pointers are quite a complex topic, so look <a\n                    href={\"#soon\"}>here (coming soon)</a> for a full explanation.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"char[]\"/></td>\n            <td>Also a string of characters (such as <CodeBlock language=\"c\" text='\"Hello world\"'/>).</td>\n            <td>Also not a basic type, but an array of <CodeBlock language=\"c\" text=\"char\"/>. Arrays are not pointers,\n                but a block of x\n                amount of <CodeBlock language=\"c\" text=\"char\"/>.\n                See <a href={\"#soon\"}>the section on arrays</a> for details.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"float\"/></td>\n            <td>A decimal (such as <CodeBlock language=\"c\" text=\"3.14\"/>).</td>\n            <td>Floats are slightly imprecise and cannot represent numbers exactly (so <CodeBlock language=\"c\"\n                                                                                                  text=\"0.3\"/> will be\n                represented as <CodeBlock language=\"c\" text=\"0.3000000004\"/>. On 99% of systems floats are 32 bits\n                in\n                length. They are called \"floats\" because they represent a \"floating-point number\". You really should be\n                using <CodeBlock language=\"c\" text=\"double\"/> instead as\n                it is just as fast (on most systems) and much more precise.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"long double\"/></td>\n            <td>A decimal (such as <CodeBlock language=\"c\" text=\"3.14\"/>), but even more precise than a <CodeBlock\n                language=\"c\" text=\"double\"/>.\n            </td>\n            <td>Like doubles, long doubles cannot represent numbers exactly, but are (on 99% of systems) 128 bits long.\n                Do not use these because the precision gain is negligible and the performance hit is serious.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"long\"/></td>\n            <td>An integer that is (typically) bigger than an <CodeBlock language=\"c\" text=\"int\"/></td>\n            <td>On 99% of systems they are 64 bit and therefore can store integers from -2^63 to 2^63 - 1.</td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"long long\"/></td>\n            <td>An integer that is (sometimes) bigger than an <CodeBlock language=\"c\" text=\"long\"/></td>\n            <td>On 99% of systems they are 64 bit and therefore can store integers from -2^63 to 2^63 - 1.</td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"short\"/></td>\n            <td>An integer that is (typically) smaller than an <CodeBlock language=\"c\" text=\"int\"/></td>\n            <td>On 99% of systems they are 16 bit and therefore can store integers from -2^15 from 2^15 - 1. For the\n                love of god use <CodeBlock language=\"c\" text=\"int\"/> instead of short even if you expect a 16-bit value.\n                These have a pretty\n                bad performance hit due to CPU alignment and whatnot and are generally not worth using in any case.\n                Don't try to prematurely optimize by saving 2 bytes here and there. Your code should go nowhere near\n                your RAM limit anyway, and if it is, then the 2 bytes you saved from <CodeBlock language=\"c\"\n                                                                                                text=\"short\"/> was the\n                least of\n                your concerns.\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>);","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-functions\", \"Functions\", <div>\n    <p>\n        Listen up, because this is the most important concept you're going to take away from CS1.\n        A function in any programming language takes 0 or more inputs, does something with those inputs, and spits\n        out a result. Functions are great because they let you avoid writing the same code to do the same thing multiple\n        times.\n    </p>\n    <p>\n        A function declared as <CodeBlock language=\"c\" text=\"char func(int a, double b)\"/> would take an integer\n        parameter and a decimal parameter, do something with them, and output an character result.\n        The output type, <CodeBlock language=\"c\" text=\"char\"/>, part of this declaration is called the \"return type\",\n        while the <CodeBlock language=\"c\" text=\"int a\"/>, and <CodeBlock language=\"c\" text=\"double b\"/> inputs are\n        called \"parameters\" of the function. A function with a return type of <CodeBlock language=\"c\" text=\"void\"/>\n        does not return a value, while a function with a parameter list like\n        <CodeBlock language=\"c\" text=\"int func(void)\"/> does not take any parameters.\n    </p>\n    <p>\n        Below are some examples of functions C has built-in:\n    </p>\n    <table className=\"table\">\n        <tbody>\n        <tr>\n            <th>Name</th>\n            <th><CodeBlock language=\"c\" text=\"#include <this>\"/></th>\n            <th>Explanation</th>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"int abs(int x)\"/></td>\n            <td><CodeBlock text=\"math.h\"/></td>\n            <td>Takes an integer and returns its absolute value as an integer.</td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"int atoi(char* str)\"/>*</td>\n            <td><CodeBlock text=\"stdlib.h\"/></td>\n            <td>\n                Takes a string of numbers like <CodeBlock language=\"c\" text='\"123\"'/> and returns the\n                equivalent integer <CodeBlock language=\"c\" text=\"123\"/>.\n            </td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"double sqrt(double x)\"/></td>\n            <td><CodeBlock text=\"math.h\"/></td>\n            <td>Takes a decimal and returns its square root.</td>\n        </tr>\n        <tr>\n            <td><CodeBlock language=\"c\" text=\"char* strcat(char* dst, char* src)\"/></td>\n            <td><CodeBlock text=\"string.h\"/></td>\n            <td>Copies the string <CodeBlock text=\"src\"/> into the string <CodeBlock text=\"dst\"/> and returns <CodeBlock\n                text=\"dst\"/></td>\n        </tr>\n        </tbody>\n    </table>\n    <p className=\"text-muted\">\n       * - I know it's a <i>const</i> char pointer, but that requires explaining a lot.\n    </p>\n    <p>\n        To use these functions, <CodeBlock language=\"c\" text=\"#include\"/> the appropriate header file. So if you\n        wanted to use <CodeBlock text=\"abs\"/>, you would <CodeBlock language=\"c\" text=\"#include <math.h>\"/> at\n        the top of your C file.\n    </p>\n    <p>\n        You can also declare your own functions like below:\n        <CodeBlock language=\"c\" text={[\n            \"double square(double x) {\",\n            \"   double y = x * x;\",\n            \"   return y;\",\n            \"}\"\n        ]}/>\n        The above function takes a single decimal parameter and outputs the square of that decimal.\n        The <CodeBlock language=\"c\" text=\"return\"/> keyword exits the current function and outputs the given value.\n        In this case, the <CodeBlock text=\"square\"/> function outputs the value contained in the\n        variable <CodeBlock text=\"y\"/>. In the case of a <CodeBlock language=\"c\" text=\"void\"/>-returning function,\n        <CodeBlock language=\"c\" text=\"return;\"/> simply exits the function.\n    </p>\n    <p>\n        Note that a function you make must always return a value of the correct type.\n    </p>\n</div>);","import Page from \"../../../Page\";\nimport React from \"react\";\nimport Replit from \"../../../../Replit\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-basicsofc-printf\", \"printf\", <div>\n        <p>\n            Welcome to the second worst part of C. Unfortunately it's also the first part of C you learn.\n            <CodeBlock text=\"printf\"/>, as the name implies, lets you print things to the screen. In its most basic form, it\n            can print a simple string to the screen like below:\n        </p>\n        <CodeBlock language=\"c\" text={[\n            'printf(\"Hello world\\n\");'\n        ]}/>\n        <p>\n            Which prints <CodeBlock text=\"Hello world\"/> followed by a \"newline\" to the screen.\n            The \"newline\" does what the enter key does in any editor; it puts you on a new line.\n            <CodeBlock text=\"printf\"/> can also be used to print variables to the screen\n            like below:\n        </p>\n        <CodeBlock language=\"c\" text={[\n            \"int x = 4;\",\n            \"double y = 3.14;\",\n            \"char* z = \\\"abc\\\";\",\n            \"printf(\\\"thing 1: %d, thing 2: %lf, thing 3: %s\\\\n\\\", x, y, z);\",\n        ]}/>\n        <p>\n            Which prints <CodeBlock text=\"thing 1: 4, thing 2: 3.14000, thing 3: abc\"/> to the screen.\n        </p>\n        <p>\n            A full list of <CodeBlock text=\"%\"/> specifiers can be found <a\n            href=\"http://www.cplusplus.com/reference/cstdio/printf/\">here</a>.\n        </p>\n        <p>\n            A more complete list of examples can be found below:\n        </p>\n        <Replit href=\"https://repl.it/repls/SparseDigitalGreyware?lite=true\" title=\"Printf Example\"/>\n    </div>\n);","import p2_1_1 from \"./pages/2-1-1-The-Osprey\";\nimport p2_1_2 from \"./pages/2-1-2-Hello-World\";\nimport p2_1_3 from \"./pages/2-1-3-Two-Plus-Two\";\nimport p2_1_4 from \"./pages/2-1-4-Variables\";\nimport p2_1_5 from \"./pages/2-1-5-Functions\";\nimport p2_1_6 from \"./pages/2-1-6-printf\";\nimport Submodule from \"../../Submodule\";\n\nexport default new Submodule(\"computerscience1-basicsofc\", \"Basics of C\", [p2_1_1, p2_1_2, p2_1_3, p2_1_4, p2_1_5, p2_1_6]);\n","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-whatdoido-idontknowwheretostart\", \"I don't know where to start\", <div>\n    <p>\n        So you got a project, and you have no idea where to start.\n        <ol>\n            <li>\n                First, read the project description. Often times it tells you a great deal about what to do.\n            </li>\n            <li>\n                If you've read the project description and still don't know what to do, go to class. Often times your\n                professor helps you complete the project.\n            </li>\n            <li>\n                If that doesn't work, then try to divide the project into steps. You may not know how to make\n                a rock-paper-scissors game in C, but you can probably make the function that reads rock, paper,\n                or scissors from the user. You may get stuck on a few parts, but at least you'll have some of the\n                project done\n            </li>\n            <li>\n                If you cannot identify even a few things to do, then we've got quite the problem here, chief.\n                At this point, you could try <a href=\"#computerscience1-whatdoido-askinggoodquestions\">asking\n                questions</a>. Be honest about your predicament; don't say \"How do I do rock paper scissors in C?\";\n                instead, say \"I have no idea where to start with CS1 project 2.\"\n            </li>\n            <li>\n                If you really don't give a shit about learning or being a competent human being, you could try\n                copying the project off someone who actually knows what they're doing, or off someone who knows\n                someone who knows what they're doing. This will get you through the project (if you don't get caught),\n                but won't get you through future projects, tests, classes, and life, as programming skills build off\n                each other and if you can't do the current project, you're dead in the water for projects in the future.\n                The probability you get caught copying one project is basically nothing, but if you're incompetent,\n                you stick out like a sore thumb and assuming you actually cheat your way through all 30+ projects, in\n                the best case scenario you're stuck with a job you hate and don't know how to do.\n            </li>\n        </ol>\n    </p>\n</div>);\n","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-whatdoido-askinggoodquestions\", \"Asking good questions\", <div>\n    <p>\n        So you want to ask a question, so you type:\n        <blockquote>\n            how i compare string number in C\n        </blockquote>\n        and nobody has a clue what you're talking about.\n    </p>\n    <p>\n        <strong>If you have tried to solve the problem</strong> and you still need to ask a question, that's fine, but\n        use the below tips to get the best answers:\n        <ul>\n            <li>\n                <p>\n                    <strong>\n                        Tell us what you tried. If you have tried nothing, then try something before you ask for help.\n                        If you have no idea where to start, mention that in your question.\n                    </strong>\n                </p>\n                Telling people what you tried not only helps immensely in solving your problem, but also shows that\n                you care enough to actually give a decent effort on your project and you aren't some freeloader\n                who just wants to get \"their\" degree on the back of someone else's effort. At the end of the day,\n                your project is your project and 100% your responsibility.\n            </li>\n            <li>\n                <i>Use halfway-decent English.</i> You don't have to capitalize the beginning of each sentence,\n                but you should not be any words short of a complete sentence. Punctuation also helps significantly.\n                The person helping you should not have to figure out what you're trying to say. For example, if you're\n                going to say <q>i code print answer function error</q>, say <q>i have coded the print answer function\n                and it errors</q>.\n            </li>\n            <li>\n                <i>Don't be vague.</i> Your question should include enough information so that someone else can get\n                a good picture of what your problem is. If you ask <q>Can someone help me with my project 2?\n                It isn't working.</q>, how can you expect someone to help you if they have no idea what part of your\n                code isn't working, or what the code is designed to do?\n                <ul>\n                    <li>\n                        If someone not in your class is trying to help you, post your project's rubric.\n                    </li>\n                    <li>\n                        If a line of code is erroring, post the function it's in. On Discord, post code like this:\n                        <CodeBlock text={[\n                            \"```c\",\n                            \"int main(void) {\",\n                            \"   return 0;\",\n                            \"}\",\n                            \"```\",\n                        ]}/>\n                        For Java, replace \"c\" with \"java\" in this example. The three ticks used are called \"backticks\"\n                        and can be found under your escape key.\n                    </li>\n                    <li>\n                        If your code doesn't error but also does not do what's expected, post the code <i>and</i>\n                        the expected output along with the input that produces it.\n                    </li>\n                </ul>\n                Taking these steps makes it much easier for the person helping you, which in turn makes your life\n                easier as you aren't peppered with follow-up questions.\n            </li>\n        </ul>\n    </p>\n</div>);","import Page from \"../../../Page\";\nimport React from \"react\";\nimport CodeBlock from \"../../../../CodeBlock\";\n\nexport default new Page(\"computerscience1-itisntworking-readingtheerrormessage\", \"Reading the error message\", <div>\n    <p>\n        You run your code, and it throws an error message. This is how you read it.\n    </p>\n    <p>\n        You compile this:\n        <CodeBlock language=\"gcc\" text={[\n            \"#include <stdio.h>\",\n            \"\",\n            \"int main(void) {\",\n            \"   printf(hello world);\",\n            \"}\"\n        ]}/>\n        And see this error message:\n        <CodeBlock language=\"gcc\" text={[\n            \"error.c: In function ‘main’:\",\n            \"error.c:4:9: error: ‘hello’ undeclared (first use in this function)\",\n        ]}/>\n        Look for the line(s) that says <CodeBlock language=\"gcc\" text=\"error:\"/>. Then look at the\n        <CodeBlock language=\"gcc\" text=\"error.c:4:9\"/>. The <CodeBlock language=\"gcc\" text=\"4:9\"/> means\n        \"4th line, 9th character\". That's where your error is located.\n    </p>\n    <p>\n        \n    </p>\n</div>);\n","import p2_2_1 from \"./pages/2-2-1-I-Dont-Know-Where-To-Start\";\nimport p2_2_2 from \"./pages/2-2-2-Asking-Good-Questions\";\nimport p2_2_3 from \"./pages/2-2-3-Reading-the-Error-Message\";\nimport Submodule from \"../../Submodule\";\n\nexport default new Submodule(\"computerscience1-whatdoido\", \"What do I do?\", [p2_2_1, p2_2_2, p2_2_3]);\n","import m1 from \"./1-Welcome/1-Welcome\";\nimport m2 from \"./2-ComputerScience1/2-ComputerScience1\";\n\nconst list = [m1, m2];\nexport default list;\n","import s2_1 from \"./2-1-BasicsOfC/2-1-BasicsOfC\";\nimport s2_2 from \"./2-2-What-Do-I-Do/2-2-What-Do-I-Do\";\nimport Module from \"../Module\";\n\nexport default new Module(\"computerscience1\", \"Computer Science 1\", [s2_1, s2_2]);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ModuleList from \"./content/ModuleList\"\n\nReactDOM.render(<App modules={ModuleList}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}